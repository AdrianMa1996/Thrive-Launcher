<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <Version>2.0.0</Version>
    <Authors>Revolutionary Games Studio</Authors>
    <AssemblyTitle>Thrive Launcher</AssemblyTitle>
    <UseAppHost>true</UseAppHost>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishSingleFile>true</PublishSingleFile>
    <PublishTrimmed>false</PublishTrimmed>
	<!--Avalonia doesen't support TrimMode=link currently,but we are working on that https://github.com/AvaloniaUI/Avalonia/issues/6892 -->
	<TrimMode>copyused</TrimMode>
	<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
  </PropertyGroup>
  <ItemGroup>
    <AvaloniaResource Include="Assets/**" />
    <None Remove=".gitignore" />
  </ItemGroup>
  <ItemGroup>
	<!--This helps with theme dll-s trimming.
	If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
	https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
	<TrimmableAssembly Include="Avalonia.Themes.Fluent" />
	<TrimmableAssembly Include="Avalonia.Themes.Default" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Avalonia" Version="0.10.18" />
    <PackageReference Include="Avalonia.Desktop" Version="0.10.18" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="0.10.18" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="0.10.18" />
    <PackageReference Include="CommandLineParser" Version="2.9.1" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="6.0.0" />
    <PackageReference Include="NLog" Version="5.0.2" />
    <PackageReference Include="NLog.Extensions.Logging" Version="5.0.2" />
	<PackageReference Include="XamlNameReferenceGenerator" Version="1.3.4" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\LauncherBackend\LauncherBackend.csproj" />
    <ProjectReference Include="..\RevolutionaryGamesCommon\DevCenterCommunication\DevCenterCommunication.csproj" />
    <ProjectReference Include="..\RevolutionaryGamesCommon\ScriptsBase\ScriptsBase.csproj" />
    <ProjectReference Include="..\RevolutionaryGamesCommon\SharedBase\SharedBase.csproj" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="..\LICENSE.md" LogicalName="LICENSE.md" />
    <EmbeddedResource Include="Assets\Fonts\Roboto\LICENSE.txt" LogicalName="Roboto/LICENSE.txt" />
    <EmbeddedResource Include="Assets\Fonts\Lato\OFL.txt" LogicalName="OFL.txt" />
  </ItemGroup>
  <Target Name="CopyTool7zLicense" AfterTargets="Build">
    <Message Text="Running copy 7-zip license" Importance="High" />
    <Copy SkipUnchangedFiles="true"
        SourceFiles="$(ProjectDir)..\tools\7zip\License.txt"
        DestinationFolder="$(TargetDir)tools\7zip" />
  </Target>  
  <Target Name="CopyTool7zWindows" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <Message Text="Running 7-zip copy task for Windows" Importance="High" />
    <Copy SkipUnchangedFiles="true"
        SourceFiles="$(ProjectDir)..\tools\7zip\7za.dll;$(ProjectDir)tools\7zip\7za.exe;$(ProjectDir)tools\7zip\7zxa.dll"
        DestinationFolder="$(TargetDir)tools\7zip" />
    <Message Text="Copied 7-zip files" Importance="High" />
  </Target>
  <Target Name="CopyTool7zLinux" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <Message Text="Running 7-zip copy task for Linux" Importance="High" />
    <Copy SkipUnchangedFiles="true"
          SourceFiles="$(ProjectDir)..\tools\7zip\7za"
          DestinationFolder="$(TargetDir)tools\7zip" />
    <Message Text="Copied 7-zip files" Importance="High" />
  </Target>
  <Target Name="CopyTool7zMac" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <Message Text="Running 7-zip copy task for Mac" Importance="High" />
    <Copy SkipUnchangedFiles="true"
          SourceFiles="$(ProjectDir)..\tools\7zip\7za_mac"
          DestinationFolder="$(TargetDir)tools\7zip" />
    <Message Text="Copied 7-zip files" Importance="High" />
  </Target>
  <Target Name="CopyToolPckLicense" AfterTargets="Build">
    <Message Text="Running copy godotpcktool license" Importance="High" />
    <Copy SkipUnchangedFiles="true"
          SourceFiles="$(ProjectDir)..\tools\pck\LICENSE;$(ProjectDir)..\tools\pck\LibraryLicenses.txt"
          DestinationFolder="$(TargetDir)tools\pck" />
  </Target>
  <Target Name="CopyToolPckWindows" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <Message Text="Running godotpcktool copy task for Windows" Importance="High" />
    <Copy SkipUnchangedFiles="true"
          SourceFiles="$(ProjectDir)..\tools\pck\godotpcktool.exe"
          DestinationFolder="$(TargetDir)tools\pck" />
    <Message Text="Copied godotpcktool files" Importance="High" />
  </Target>
  <Target Name="CopyToolPckLinux" AfterTargets="Build" Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <Message Text="Running godotpcktool copy task for Linux" Importance="High" />
    <Copy SkipUnchangedFiles="true"
          SourceFiles="$(ProjectDir)..\tools\pck\godotpcktool"
          DestinationFolder="$(TargetDir)tools\pck" />
    <Message Text="Copied godotpcktool files" Importance="High" />
  </Target>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <EmbeddedResource Update="Properties\Resources.fi.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
</Project>
